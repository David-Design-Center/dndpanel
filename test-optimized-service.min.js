#!/usr/bin/env node
import{createClient}from"@supabase/supabase-js";const supabaseUrl="https://jvcdxglsoholhgapfpet.supabase.co",supabaseKey="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imp2Y2R4Z2xzb2hvbGhnYXBmcGV0Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDg0MzM0MjUsImV4cCI6MjA2NDAwOTQyNX0.1NPv3ocVOrhVjD0CjfU3FolCsbVEFGOdJAkxnWEPPdY",supabase=createClient(supabaseUrl,supabaseKey);async function testOptimizedEmailService(){console.log("üß™ Testing optimized email service availability...");try{const{data:data,error:error}=await supabase.functions.invoke("fetch-gmail-thread",{body:{},headers:{}});if(console.log("Response:",{data:data,error:error}),error){try{const response=error.context;if(response&&response.body){const reader=response.body.getReader(),chunks=[];let done=!1;for(;!done;){const{value:value,done:readerDone}=await reader.read();done=readerDone,value&&chunks.push(value)}const responseData=(new TextDecoder).decode(new Uint8Array(chunks.reduce(((acc,chunk)=>[...acc,...chunk]),[])));console.log("Error response body:",responseData);const errorData=JSON.parse(responseData);if(errorData.error&&(errorData.error.includes("required")||errorData.error.includes("Missing")))return console.log("‚úÖ Function is deployed and responding correctly!"),console.log("‚úÖ Expected validation error confirms the function is working"),!0}}catch(parseError){console.log("Could not parse error response, but function is responding")}return 400===error.context?.status?(console.log("‚úÖ Function is available and returning expected validation errors!"),!0):(console.log("‚ö†Ô∏è Function responded but with unexpected error:",error),!1)}return console.log("‚úÖ Function is available and responding"),!0}catch(error){return console.log("‚ùå Function test failed:",error.message),!1}}testOptimizedEmailService();